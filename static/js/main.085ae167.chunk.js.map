{"version":3,"sources":["../node_modules/jspdf/dist sync","components/menu/Menu.tsx","components/menu/MenuItem.tsx","components/menu/index.tsx","components/Footer.tsx","components/tree/Selector.tsx","components/tree/TeamDriverSelect.tsx","components/tree/DrawTree.tsx","components/tree/index.tsx","components/sixdegrees/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Menu","props","className","link","children","ListItem","button","component","forwardRef","props2","ref","exact","innerRef","to","useStyles","PropTypes","string","isRequired","elementType","makeStyles","createStyles","menuItem","background","color","menuItemIcon","AppMenuItem","name","Icon","classes","MenuItemRoot","ListItemIcon","ListItemText","primary","inset","appMenuItems","IconDashboard","IconInfo","IconArticle","IconCode","MenuItems","toolbar","Divider","List","disablePadding","map","item","index","key","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","mixins","drawerPaper","position","whiteSpace","paddingTop","paddingBottom","height","content","flexGrow","padding","AppMenu","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","container","window","document","body","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Footer","style","bottom","textAlign","Select","Autocomplete","options","data","getOptionLabel","value","onChange","_event","values","setValue","autoSelect","autoHighlight","renderInput","params","TextField","label","ProcessInput","push","sort","left","right","typeVals","team","driver","season","dataTypes","TeamIdAndNameLink","DriverIdAndNameLink","seasons","year","Date","getUTCFullYear","i","String","GenSeasons","TeamDriverSelector","Grid","xs","typeV","vals","setTypeV","setValV","valV","GraphDraw","nodes","separation","siblings","translate","x","y","orientation","pathFunc","graph","Graph","GetDriversBasedOnType","TeamNamesAndDrivers","GetDriverIDsForSeason","Number","TreeObtain","valVL","typeVL","valVR","typeVR","closest","driversL","driversR","GetClosestDriversPairing","GetFarthestDriverPairing","GetNodesBasedOnCloseness","Object","length","PathToTree","TreeShow","defDataTypeShow","setTypeVL","setValVL","setTypeVR","setValVR","setClosest","setNodes","useEffect","path","marginTop","sm","TeamDriverSelect","FormGroup","row","FormControlLabel","control","Checkbox","checked","TableShow","title","columns","field","pageSize","sorting","showFirstLastPageButtons","Closeness","GetSixDegreesOfFreedomInMainComponent","mostClosest","mostFarthest","console","log","overflow","App","clsx","Container","maxWidth","TreeDashboard","SixDegrees","location","href","Link","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.085ae167.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 345;","import React, { forwardRef } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\nconst Menu: React.FC<{\n   className: string;\n   link: string;\n}> = props => {\n   const { className, link, children } = props;\n\n   // Return a LitItem with a link component\n   return (\n      <ListItem\n         button\n         className={className}\n         component={forwardRef((props2: NavLinkProps, ref: any) => (\n            <NavLink exact {...props2} innerRef={ref} />\n         ))}\n         to={link}\n      >\n         {children}\n      </ListItem>\n   );\n};\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Menu from './Menu';\n\n// React runtime PropTypes\nexport const AppMenuItemPropTypes = {\n   name: PropTypes.string.isRequired,\n   link: PropTypes.string.isRequired,\n   Icon: PropTypes.elementType\n};\n\n// TypeScript compile-time props type, infered from propTypes\n// https://dev.to/busypeoples/notes-on-typescript-inferring-react-proptypes-1g88\ntype AppMenuItemPropTypes = PropTypes.InferProps<typeof AppMenuItemPropTypes>;\n\nconst AppMenuItem: React.FC<AppMenuItemPropTypes> = props => {\n   const { name, link, Icon } = props;\n   const classes = useStyles();\n\n   const MenuItemRoot = (\n      <Menu className={classes.menuItem} link={link}>\n         {/* Display an icon if any */}\n         {!!Icon && (\n            <ListItemIcon className={classes.menuItemIcon}>\n               <Icon />\n            </ListItemIcon>\n         )}\n         <ListItemText primary={name} inset={!Icon} />\n      </Menu>\n   );\n\n   return <>{MenuItemRoot}</>;\n};\n\nconst useStyles = makeStyles(() =>\n   createStyles({\n      menuItem: {\n         '&.active': {\n            background: 'rgba(0, 0, 0, 0.08)',\n            '& .MuiListItemIcon-root': {\n               color: '#fff'\n            }\n         }\n      },\n      menuItemIcon: {\n         color: '#97c05c'\n      }\n   })\n);\n\nexport default AppMenuItem;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\n\nimport IconDashboard from '@material-ui/icons/Dashboard';\nimport IconInfo from '@material-ui/icons/Description';\nimport IconArticle from '@material-ui/icons/DescriptionSharp';\nimport IconCode from '@material-ui/icons/GitHub';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Divider from '@material-ui/core/Divider';\nimport {\n   CssBaseline,\n   AppBar,\n   Toolbar,\n   IconButton,\n   Typography,\n   Hidden,\n   Drawer\n} from '@material-ui/core';\n\nimport AppMenuItem from './MenuItem';\n\nconst appMenuItems = [\n   {\n      name: 'Dashboard',\n      link: '/',\n      Icon: IconDashboard\n   },\n   {\n      name: 'Six Degrees',\n      link: '/sixdegrees',\n      Icon: IconInfo\n   },\n   {\n      name: 'Divider',\n      // Just add metadata\n      link: '',\n      Icon: IconArticle\n   },\n   {\n      name: 'Article',\n      link: '/article',\n      Icon: IconArticle\n   },\n   {\n      name: 'Code',\n      link: '/code',\n      Icon: IconCode\n   }\n];\n\nexport function MenuItems({ classes }: { classes: { toolbar: string } }) {\n   return (\n      <>\n         {' '}\n         <div className={classes.toolbar} />\n         <Divider />\n         <List component=\"nav\" disablePadding>\n            {appMenuItems.map((item, index) =>\n               item.name !== 'Divider' ? (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <AppMenuItem {...item} key={`${index}333a`} />\n               ) : (\n                  <Divider />\n               )\n            )}\n         </List>\n      </>\n   );\n}\n\nconst AppMenu: React.FC = () => {\n   const theme = useTheme();\n   const classes = useStyles();\n   const [mobileOpen, setMobileOpen] = React.useState(false);\n\n   const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen);\n   };\n\n   const container = window != null ? () => window.document.body : null;\n   return (\n      <>\n         <CssBaseline />\n         <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n               <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={handleDrawerToggle}\n                  className={classes.menuButton}\n               >\n                  <MenuIcon />\n               </IconButton>\n               <Typography variant=\"h6\" noWrap>\n                  Six Degrees of F1\n               </Typography>\n            </Toolbar>\n         </AppBar>\n         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n               <Drawer\n                  container={container}\n                  variant=\"temporary\"\n                  anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                  open={mobileOpen}\n                  onClose={handleDrawerToggle}\n                  classes={{\n                     paper: classes.drawerPaper\n                  }}\n                  ModalProps={{\n                     keepMounted: true // Better open performance on mobile.\n                  }}\n               >\n                  <MenuItems classes={classes} />\n               </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n               <Drawer\n                  classes={{\n                     paper: classes.drawerPaper\n                  }}\n                  variant=\"permanent\"\n                  open\n               >\n                  <MenuItems classes={classes} />\n               </Drawer>\n            </Hidden>\n         </nav>\n      </>\n   );\n};\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      display: 'flex'\n   },\n   drawer: {\n      [theme.breakpoints.up('sm')]: {\n         width: drawerWidth,\n         flexShrink: 0\n      }\n   },\n   appBar: {\n      [theme.breakpoints.up('sm')]: {\n         width: `calc(100% - ${drawerWidth}px)`,\n         marginLeft: drawerWidth\n      }\n   },\n   menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n         display: 'none'\n      }\n   },\n   // necessary for content to be below app bar\n   toolbar: theme.mixins.toolbar,\n   drawerPaper: {\n      width: drawerWidth,\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n      background: '#535454',\n      color: '#fff',\n      height: '100vh'\n   },\n   content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n   }\n}));\n\nexport default AppMenu;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nconst Footer: React.FC = ({ children }) => {\n   return (\n      <div\n         style={{\n            bottom: 0,\n            width: '100%',\n            textAlign: 'center',\n            position: 'absolute'\n         }}\n      >\n         <Typography variant=\"body1\">{children}</Typography>\n      </div>\n   );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function Select(props: {\n   data: string[][];\n   name: string;\n   setValue:\n      | ((_: string[]) => void)\n      | React.Dispatch<React.SetStateAction<string[]>>;\n   value: string[];\n   label: string;\n}) {\n   const handleChange = (\n      _event: React.ChangeEvent<{}>,\n      values: string[] | null\n   ) => {\n      if (values != null) props.setValue(values);\n   };\n   return (\n      <div>\n         <Autocomplete\n            id={`combo-box-demo-${props.name}`}\n            options={props.data}\n            getOptionLabel={item => {\n               return item[1];\n            }}\n            style={{ width: 300 }}\n            // defaultValue={props.data[0]}\n            value={props.value}\n            onChange={handleChange}\n            autoSelect\n            autoHighlight\n            renderInput={params => (\n               <TextField {...params} label={props.label} variant=\"outlined\" />\n            )}\n         />\n      </div>\n   );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n   TeamIdAndNameLink,\n   DriverIdAndNameLink\n} from 'formula-one-six-degrees-metadata';\n\nimport Selector from './Selector';\n\nfunction GenSeasons() {\n   const seasons: { [val in string]: string } = {};\n   const year = new Date().getUTCFullYear();\n   for (let i = 1950; i <= year; i += 1) seasons[String(i)] = String(i);\n   return seasons;\n}\nexport function ProcessInput(props: { [val in string]: string }) {\n   let data: string[][] = [];\n   // eslint-disable-next-line guard-for-in\n   for (const key in props) data.push([key, props[key]]);\n   data = data.sort((left, right) => (left[1] < right[1] ? -1 : 1));\n   return data;\n}\nexport const typeVals = {\n   team: 'Teams',\n   driver: 'Drivers',\n   season: 'Season'\n};\n\nexport const dataTypes = {\n   team: ProcessInput(TeamIdAndNameLink),\n   driver: ProcessInput(DriverIdAndNameLink),\n   season: ProcessInput(GenSeasons())\n};\ntype dataTypeKeys = keyof typeof dataTypes;\n\nconst TeamDriverSelector: React.FC<{\n   typeV: string[];\n   setTypeV: React.Dispatch<React.SetStateAction<string[]>>;\n   valV: string[];\n   setValV: React.Dispatch<React.SetStateAction<string[]>>;\n}> = props => {\n   function UpdateTypeVals(vals: string[]) {\n      props.setTypeV(vals);\n      props.setValV(dataTypes[vals[0] as dataTypeKeys][0]);\n   }\n   return (\n      <Grid container item spacing={2}>\n         <Grid container item xs={12}>\n            <Selector\n               value={props.typeV}\n               setValue={UpdateTypeVals}\n               name=\"Start\"\n               key=\"222a2\"\n               data={ProcessInput(typeVals)}\n               label=\"Type\"\n            />\n         </Grid>{' '}\n         <Grid container item xs={12}>\n            <Selector\n               value={props.valV ?? dataTypes.team}\n               setValue={props.setValV}\n               name=\"Start\"\n               key=\"222a1\"\n               label={props.typeV[1]}\n               data={dataTypes[props.typeV[0] as dataTypeKeys]}\n            />\n         </Grid>\n      </Grid>\n   );\n};\n\nexport default TeamDriverSelector;\n","import React from 'react';\nimport Tree from 'react-d3-tree';\n\nexport default function GraphDraw(props: { nodes: any }) {\n   return (\n      <Tree\n         data={props.nodes}\n         separation={{\n            siblings: 0.5\n         }}\n         translate={{\n            x: 30,\n            y: 50\n         }}\n         orientation=\"horizontal\"\n         pathFunc=\"diagonal\"\n      />\n   );\n}\n","import React from 'react';\nimport {\n   Grid,\n   Checkbox,\n   FormGroup,\n   FormControlLabel,\n   Typography\n} from '@material-ui/core';\nimport Graph from 'formula-one-six-degree-graph-util';\nimport {\n   TeamNamesAndDrivers,\n   TeamNameT,\n   DriverLinkNameT,\n   DriverIdAndNameLink\n} from 'formula-one-six-degrees-metadata';\n\nimport TeamDriverSelect, {\n   dataTypes,\n   ProcessInput,\n   typeVals\n} from './TeamDriverSelect';\nimport DrawGraph from './DrawTree';\n\nconst graph = new Graph();\n\nfunction GetDriversBasedOnType(typeV: string, valV: string): DriverLinkNameT[] {\n   if (typeV == null || typeV === '' || valV == null || valV === '')\n      return [] as DriverLinkNameT[];\n   if (typeV === 'team') {\n      return TeamNamesAndDrivers[valV as TeamNameT] as DriverLinkNameT[];\n   }\n   if (typeV === 'driver') return [valV as DriverLinkNameT];\n   if (typeV === 'season') return Graph.GetDriverIDsForSeason(Number(valV));\n   return [] as DriverLinkNameT[];\n}\nfunction GetNodesBasedOnCloseness(\n   driversL: DriverLinkNameT[],\n   driversR: DriverLinkNameT[],\n   closest: boolean\n) {\n   if (closest) return graph.GetClosestDriversPairing(driversL, driversR);\n   return graph.GetFarthestDriverPairing(driversL, driversR);\n}\nfunction TreeObtain(\n   valVL: string,\n   typeVL: string,\n   valVR: string,\n   typeVR: string,\n   closest: boolean\n) {\n   const driversL = GetDriversBasedOnType(typeVL, valVL);\n   const driversR = GetDriversBasedOnType(typeVR, valVR);\n   const nodes = GetNodesBasedOnCloseness(driversL, driversR, closest);\n   if (Object.keys(nodes).length === 0)\n      return [\n         {\n            name: DriverIdAndNameLink[driversL[0]],\n            children: []\n         },\n         {\n            name: DriverIdAndNameLink[driversR[0]],\n            children: []\n         }\n      ];\n   return Graph.PathToTree(nodes);\n}\n\nconst TreeShow: React.FC<{}> = () => {\n   // By Default Select Team\n   const defDataTypeShow = ProcessInput(typeVals)[0];\n   const [typeVL, setTypeVL] = React.useState<string[]>(defDataTypeShow);\n   const [valVL, setValVL] = React.useState<string[]>(dataTypes.driver[0]);\n   const [typeVR, setTypeVR] = React.useState<string[]>(defDataTypeShow);\n   const [valVR, setValVR] = React.useState<string[]>(dataTypes.driver[0]);\n   const [closest, setClosest] = React.useState<boolean>(true);\n   const [nodes, setNodes] = React.useState<any>({});\n\n   React.useEffect(() => {\n      const path = TreeObtain(\n         valVL[0],\n         typeVL[0],\n         valVR[0],\n         typeVR[0],\n         closest\n      );\n      setNodes(path);\n   }, [valVL, typeVL, valVR, typeVR, closest]);\n\n   return (\n      <>\n         <Typography variant=\"h4\">\n            SHORTEST PATH DISTANCE BETWEEN TEAMMATES\n         </Typography>\n         <div style={{ marginTop: '8vh' }} />\n         <Grid container spacing={4}>\n            <Grid container item xs={12} sm={5}>\n               <TeamDriverSelect\n                  setTypeV={setTypeVL}\n                  typeV={typeVL}\n                  valV={valVL}\n                  setValV={setValVL}\n               />\n            </Grid>\n            <Grid container item xs={12} sm={5}>\n               <TeamDriverSelect\n                  setTypeV={setTypeVR}\n                  typeV={typeVR}\n                  valV={valVR}\n                  setValV={setValVR}\n               />\n            </Grid>\n            <Grid container item xs={12} sm={2}>\n               <FormGroup row>\n                  <FormControlLabel\n                     control={\n                        <Checkbox\n                           checked={closest}\n                           onChange={() => {\n                              setClosest(!closest);\n                           }}\n                           name=\"checkedB\"\n                           color=\"primary\"\n                        />\n                     }\n                     label={closest ? 'Closest' : 'Farthest'}\n                  />\n               </FormGroup>\n            </Grid>\n         </Grid>\n         <div\n            style={{\n               width: '100%',\n               height: '60vh',\n               marginTop: '5vh'\n            }}\n         >\n            <DrawGraph nodes={nodes} />\n         </div>\n      </>\n   );\n};\n\nexport default TreeShow;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Graph from 'formula-one-six-degree-graph-util';\nimport Table from 'material-table';\n\nfunction TableShow({\n   data,\n   title\n}: {\n   data: (string | number | string[])[][];\n   title: string;\n}) {\n   return (\n      <>\n         <Typography variant=\"h5\">\n            The Most {title} in Largest Connected SubComponent is{' '}\n            <i>\n               {' '}\n               <b>{data[0][1]}</b>\n            </i>\n         </Typography>\n         <Table\n            columns={[\n               {\n                  title: 'Name',\n                  field: '1'\n               },\n               {\n                  title: 'Avg Distance',\n                  field: '2'\n               }\n            ]}\n            data={data}\n            title={title}\n            options={{\n               pageSize: 3,\n               sorting: true,\n               showFirstLastPageButtons: false\n            }}\n         />\n      </>\n   );\n}\n\nexport default function Closeness() {\n   const graphT = new Graph();\n   const {\n      mostClosest,\n      mostFarthest\n   } = graphT.GetSixDegreesOfFreedomInMainComponent();\n   console.log(mostClosest);\n\n   return (\n      <>\n         <TableShow data={mostClosest} title=\"Closest\" />\n         <div style={{ marginTop: '3vh' }} />\n         <TableShow data={mostFarthest} title=\"Farthest\" />\n      </>\n   );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport Menu from './components/menu';\nimport Footer from './components/Footer';\nimport TreeDashboard from './components/tree';\nimport SixDegrees from './components/sixdegrees';\n\nconst App: React.FC = () => {\n   const classes = useStyles();\n\n   return (\n      <Router>\n         <div className={clsx('App', classes.root)}>\n            <Menu />\n            <main className={classes.content}>\n               <Container maxWidth=\"lg\" className={classes.container}>\n                  <Switch>\n                     <Route path=\"/\" exact component={TreeDashboard} />\n                     <Route path=\"/sixdegrees\" component={SixDegrees} />\n                     <Route\n                        path=\"/article\"\n                        component={() => {\n                           window.location.href =\n                              'https://medium.com/@pratikpc/six-degrees-of-formula-one-and-other-inter-connections-160a3a668afa?source=friends_link&sk=474f667c0b1ea7e18e8531c23b48eb8b';\n                           return null;\n                        }}\n                     />\n                     <Route\n                        path=\"/code\"\n                        component={() => {\n                           window.location.href =\n                              'https://github.com/pratikpc/six-degree-f1';\n                           return null;\n                        }}\n                     />\n                  </Switch>\n               </Container>\n            </main>\n            <Footer>\n               Six Degrees of Formula One Teammates.\n               <br /> Designed By{' '}\n               <Link href=\"https://www.linkedin.com/in/pratik-chowdhury-889bb2183/\">\n                  {' '}\n                  Pratik Chowdhury\n               </Link>\n            </Footer>\n         </div>\n      </Router>\n   );\n};\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      display: 'flex'\n   },\n   content: {\n      flexGrow: 1,\n      height: '90vh',\n      overflow: 'auto',\n      paddingTop: theme.spacing(4)\n   },\n   container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n   }\n}));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n         /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n);\n\ntype Config = {\n   onSuccess?: (registration: ServiceWorkerRegistration) => void;\n   onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Let's check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl, config);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                     'worker. To learn more, visit https://bit.ly/CRA-PWA'\n               );\n            });\n         } else {\n            // Is not localhost. Just register service worker\n            registerValidSW(swUrl, config);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            if (installingWorker == null) {\n               return;\n            }\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the updated precached content has been fetched,\n                     // but the previous service worker will still serve the older\n                     // content until all client tabs are closed.\n                     console.log(\n                        'New content is available and will be used when all ' +\n                           'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                     );\n\n                     // Execute callback\n                     if (config && config.onUpdate) {\n                        config.onUpdate(registration);\n                     }\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n\n                     // Execute callback\n                     if (config && config.onSuccess) {\n                        config.onSuccess(registration);\n                     }\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n   })\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         const contentType = response.headers.get('content-type');\n         if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n         .then(registration => {\n            registration.unregister();\n         })\n         .catch(error => {\n            console.error(error.message);\n         });\n   }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}